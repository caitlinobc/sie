dt[,i]
all(is.na(dt[ ,..i]))
i = 1
for (i in i:10) {
all_missing = all(is.na(dt[ ,..i]))
if (all_missing==FALSE) print(i)
i = i+1
}
i = 1
for (i in i:100) {
all_missing = all(is.na(dt[ ,..i]))
if (all_missing==FALSE) print(paste0(i, " contains data!"))
i = i+1
}
i = 1
for (i in i:length(dt)) {
all_missing = all(is.na(dt[ ,..i]))
if (all_missing==FALSE) print(paste0(i, " contains data!"))
i = i+1
}
# check that these columns do not contain data
i = 1
for (i in i:length(dt)) {
all_missing = all(is.na(dt[ ,..i]))
if (all_missing==FALSE) {
print(paste0(i, " contains data!")) } else {
print(paste0(i, "is blank!"))
}
i = i+1
}
# --------------------------------------------
# Caitlin O'Brien-Carelli
#
# Run descriptive statistics and data quality checks on CCD data
# --------------------------------------------
# --------------------
# Set up R
rm(list=ls()) # clear the workspace
# install the packages
library(data.table)
library(dplyr)
library(ggplot2)
library(RColorBrewer)
library(readxl)
library(openxlsx)
# --------------------
# --------------------------------------------
# import the data
# set the main directory
dir = 'C:/Users/ccarelli/OneDrive - E Glaser Ped AIDS Fdtn/data/ccd/'
# get the sheets from the data
excel_sheets(paste0(dir, 'Reviewed DDD Reporting Template 29 Sept (20).xlsx'))
dt = data.table(read.xlsx(paste0(dir, 'Reviewed DDD Reporting Template 29 Sept (20).xlsx'),
sheet = 5))
# --------------------------------------------
# --------------------
# examine the TB Screening tab
# this sheet has multiple extraneous columns
length(dt)
names(dt)
# check that these columns do not contain data
i = 1
for (i in i:length(dt)) {
all_missing = all(is.na(dt[ ,..i]))
if (all_missing==FALSE) print(paste0(i, " contains data!"))
i = i+1 }
DT
dt
# --------------------------------------------
# Caitlin O'Brien-Carelli
#
# Run descriptive statistics and data quality checks on CCD data
# --------------------------------------------
# --------------------
# Set up R
rm(list=ls()) # clear the workspace
# install the packages
library(data.table)
library(dplyr)
library(ggplot2)
library(RColorBrewer)
library(readxl)
library(openxlsx)
# --------------------
# --------------------------------------------
# import the data
# set the main directory
dir = 'C:/Users/ccarelli/OneDrive - E Glaser Ped AIDS Fdtn/data/ccd/'
# get the sheets from the data
excel_sheets(paste0(dir, 'Reviewed DDD Reporting Template 29 Sept (20).xlsx'))
dt = data.table(read.xlsx(paste0(dir, 'Reviewed DDD Reporting Template 29 Sept (20).xlsx'),
sheet = 5))
# --------------------------------------------
# --------------------------------------------
# EXAMINE THE TABS FOR DATA ERRORS
# --------------------
# examine the TB Screening tab
# this sheet has multiple extraneous columns
length(dt)
names(dt)
# check that these columns do not contain data
i = 1
for (i in i:length(dt)) {
all_missing = all(is.na(dt[ ,..i]))
if (all_missing==FALSE) print(paste0(i, " contains data!"))
i = i+1 }
# only 17 of the 16,285 columns actually contain data
# subset to the first 17 columns
dt = dt[ , 1:17]
dt
names(dt)
setnames(dt, original_names, c('region', 'facility', 'location',
'week', 'sex', 'age', 'ppl_seen', 'on_tb_tx', 'eligible_for_screening',
'screened', 'presumptive_tb', 'presum_tb_referred', 'samples_collected',
'samples_sent_to_lab', 'results_received', 'bact_confirmed',
'bact_confirmed_started_tx'
))
# --------------------------------------------
# Caitlin O'Brien-Carelli
#
# Run descriptive statistics and data quality checks on CCD data
# --------------------------------------------
# --------------------
# Set up R
rm(list=ls()) # clear the workspace
# install the packages
library(data.table)
library(dplyr)
library(ggplot2)
library(RColorBrewer)
library(readxl)
library(openxlsx)
# --------------------
# --------------------------------------------
# import the data
# set the main directory
dir = 'C:/Users/ccarelli/OneDrive - E Glaser Ped AIDS Fdtn/data/ccd/'
# get the sheets from the data
excel_sheets(paste0(dir, 'Reviewed DDD Reporting Template 29 Sept (20).xlsx'))
dt = data.table(read.xlsx(paste0(dir, 'Reviewed DDD Reporting Template 29 Sept (20).xlsx'),
sheet = 5))
# --------------------------------------------
# --------------------------------------------
# EXAMINE THE TABS FOR DATA ERRORS
# --------------------
# examine the TB Screening tab
# this sheet has multiple extraneous columns
length(dt)
names(dt)
# check that these columns do not contain data
i = 1
for (i in i:length(dt)) {
all_missing = all(is.na(dt[ ,..i]))
if (all_missing==FALSE) print(paste0(i, " contains data!"))
i = i+1 }
# only 17 of the 16,285 columns actually contain data
# subset to the first 17 columns
dt = dt[ , 1:17]
# --------------------
# rename the columns for usability
# save the original names for the ouput file
original_names = names(dt)
setnames(dt, original_names, c('region', 'facility', 'location',
'week', 'sex', 'age', 'ppl_seen', 'on_tb_tx', 'eligible_for_screening',
'screened', 'presumptive_tb', 'presum_tb_referred', 'samples_collected',
'samples_sent_to_lab', 'results_received', 'bact_confirmed',
'bact_confirmed_started_tx'
))
dt
str(dt)
dt$sex = factor(dt$sex, c('M', 'F'), c('Male', 'Female'))
str(dt)
as.logical(dt$sex)
dt[,unique(region)]
# --------------------------------------------
# Caitlin O'Brien-Carelli
#
# Run descriptive statistics and data quality checks on CCD data
# --------------------------------------------
# --------------------
# Set up R
rm(list=ls()) # clear the workspace
# install the packages
library(data.table)
library(dplyr)
library(ggplot2)
library(RColorBrewer)
library(readxl)
library(openxlsx)
# --------------------
# --------------------------------------------
# import the data
# set the main directory
dir = 'C:/Users/ccarelli/OneDrive - E Glaser Ped AIDS Fdtn/data/ccd/'
# get the sheets from the data
excel_sheets(paste0(dir, 'Reviewed DDD Reporting Template 29 Sept (20).xlsx'))
dt = data.table(read.xlsx(paste0(dir, 'Reviewed DDD Reporting Template 29 Sept (20).xlsx'),
sheet = 5))
# --------------------------------------------
# --------------------------------------------
# EXAMINE THE TABS FOR DATA ERRORS
# --------------------
# examine the TB Screening tab
# this sheet has multiple extraneous columns
length(dt)
names(dt)
# check that these columns do not contain data
i = 1
for (i in i:length(dt)) {
all_missing = all(is.na(dt[ ,..i]))
if (all_missing==FALSE) print(paste0(i, " contains data!"))
i = i+1 }
# only 17 of the 16,285 columns actually contain data
# subset to the first 17 columns
dt = dt[ , 1:17]
# --------------------
# rename the columns for usability
# save the original names for the output file
original_names = names(dt)
setnames(dt, original_names, c('region', 'facility', 'location',
'week', 'sex', 'age', 'ppl_seen', 'on_tb_tx', 'eligible_for_screening',
'screened', 'presumptive_tb', 'presum_tb_referred', 'samples_collected',
'samples_sent_to_lab', 'results_received', 'bact_confirmed',
'bact_confirmed_started_tx'
))
# --------------------
# change column types for ease of manipulation
# region is sometimes misspelled
dt[region=='hhohoo', region:='Hhohho']
dt[,unique(region)]
dt[region=='hhohho', region:='Hhohho']
dt[,unique(region)]
dt
dt[,unique(facility)]
dt[,facility = (unique(facility))][order(facility)]
dt[,facility = .(unique(facility))][order(facility)]
dt[,.(facility =unique(facility))][order(facility)]
head(dt, n =1)
dt[,.(location =unique(location))][order(location)]
dt[location=='No DDD Conducted']
dt[,.(location =unique(location))][order(location)]
head(dt, n = 1)
dt[,unique(week)]
dt[is.na(week)]
dt[is.na(week)]
# --------------------------------------------
# Caitlin O'Brien-Carelli
#
# Run descriptive statistics and data quality checks on CCD data
# --------------------------------------------
# --------------------
# Set up R
rm(list=ls()) # clear the workspace
# install the packages
library(data.table)
library(dplyr)
library(ggplot2)
library(RColorBrewer)
library(readxl)
library(openxlsx)
# --------------------
# --------------------------------------------
# import the data
# set the main directory
dir = 'C:/Users/ccarelli/OneDrive - E Glaser Ped AIDS Fdtn/data/ccd/'
# get the sheets from the data
excel_sheets(paste0(dir, 'Reviewed DDD Reporting Template 29 Sept (20).xlsx'))
dt = data.table(read.xlsx(paste0(dir, 'Reviewed DDD Reporting Template 29 Sept (20).xlsx'),
sheet = 5))
# --------------------------------------------
# --------------------------------------------
# EXAMINE THE TABS FOR DATA ERRORS
# --------------------
# examine the TB Screening tab
# this sheet has multiple extraneous columns
length(dt)
names(dt)
# check that these columns do not contain data
i = 1
for (i in i:length(dt)) {
all_missing = all(is.na(dt[ ,..i]))
if (all_missing==FALSE) print(paste0(i, " contains data!"))
i = i+1 }
# only 17 of the 16,285 columns actually contain data
# subset to the first 17 columns
dt = dt[ , 1:17]
# --------------------
# rename the columns for usability
# save the original names for the output file
original_names = names(dt)
setnames(dt, original_names, c('region', 'facility', 'location',
'week', 'sex', 'age', 'ppl_seen', 'on_tb_tx', 'eligible_for_screening',
'screened', 'presumptive_tb', 'presum_tb_referred', 'samples_collected',
'samples_sent_to_lab', 'results_received', 'bact_confirmed',
'bact_confirmed_started_tx'
))
# --------------------
# change column types for ease of manipulation
# region is sometimes misspelled
dt[region=='hhohho', region:='Hhohho']
# facility and location OK
# one location listed as "No DDD Conducted" - drop? (values all 0)
# one week has formatting that is incorrect - drop from the data set
dt = dt[!is.na(week)]
dt
# --------------------------------------------
# Caitlin O'Brien-Carelli
#
# Run descriptive statistics and data quality checks on CCD data
# --------------------------------------------
# --------------------
# Set up R
rm(list=ls()) # clear the workspace
# install the packages
library(data.table)
library(dplyr)
library(ggplot2)
library(RColorBrewer)
library(readxl)
library(openxlsx)
# --------------------
# --------------------------------------------
# import the data
# set the main directory
dir = 'C:/Users/ccarelli/OneDrive - E Glaser Ped AIDS Fdtn/data/ccd/'
# get the sheets from the data
excel_sheets(paste0(dir, 'Reviewed DDD Reporting Template 29 Sept (20).xlsx'))
dt = data.table(read.xlsx(paste0(dir, 'Reviewed DDD Reporting Template 29 Sept (20).xlsx'),
sheet = 5))
# --------------------------------------------
# --------------------------------------------
# EXAMINE THE TABS FOR DATA ERRORS
# --------------------
# examine the TB Screening tab
# this sheet has multiple extraneous columns
length(dt)
names(dt)
length(dt)
# --------------------------------------------
# Caitlin O'Brien-Carelli
#
# Run descriptive statistics and data quality checks on CCD data
# --------------------------------------------
# --------------------
# Set up R
rm(list=ls()) # clear the workspace
# install the packages
library(data.table)
library(dplyr)
library(ggplot2)
library(RColorBrewer)
library(readxl)
library(openxlsx)
# --------------------
# --------------------------------------------
# import the data
# set the main directory
dir = 'C:/Users/ccarelli/OneDrive - E Glaser Ped AIDS Fdtn/data/ccd/'
# get the sheets from the data
excel_sheets(paste0(dir, 'Reviewed DDD Reporting Template 29 Sept (20).xlsx'))
dt = data.table(read.xlsx(paste0(dir, 'Reviewed DDD Reporting Template 29 Sept (20).xlsx'),
sheet = 5))
# --------------------------------------------
# --------------------------------------------
# EXAMINE THE TABS FOR DATA ERRORS
# --------------------
# examine the TB Screening tab
# this sheet has multiple extraneous columns
length(dt)
names(dt)
# check that these columns do not contain data
i = 1
for (i in i:length(dt)) {
all_missing = all(is.na(dt[ ,..i]))
if (all_missing==FALSE) print(paste0(i, " contains data!"))
i = i+1 }
# only 17 of the 16,285 columns actually contain data
# subset to the first 17 columns
dt = dt[ , 1:17]
# --------------------
# rename the columns for usability
# save the original names for the output file
original_names = names(dt)
setnames(dt, original_names, c('region', 'facility', 'location',
'week', 'sex', 'age', 'ppl_seen', 'on_tb_tx', 'eligible_for_screening',
'screened', 'presumptive_tb', 'presum_tb_referred', 'samples_collected',
'samples_sent_to_lab', 'results_received', 'bact_confirmed',
'bact_confirmed_started_tx'
))
# --------------------
# change column types for ease of manipulation
# region is sometimes misspelled
dt[region=='hhohho', region:='Hhohho']
# facility and location OK
# one location listed as "No DDD Conducted" - drop? (values all 0)
# one week has formatting that is incorrect - drop from the data set
dt = dt[!is.na(week)]
dt
dt[ , week_no:=sapply(strsplit(week," "), "[", 2)]
dt
dt$week
strsplit(week," ")[[1]]
strsplit(dt$week," ")[[1]]
dt[ , week_no:=sapply(strsplit(week," "), "[", 1)]
dt
dt[ , start_date:=sapply(strsplit(week,"("), "[", 1)]
dt[ , start_date:=sapply(strsplit(week,"\\(\\"), "[", 1)]
sapply(strsplit(dt$week,"\\("), "[", 1)
dt[grepl(week, "\\(") ]
dt[grepl("\\(", week)]
# --------------------------------------------
# Caitlin O'Brien-Carelli
#
# Run descriptive statistics and data quality checks on CCD data
# --------------------------------------------
# --------------------
# Set up R
rm(list=ls()) # clear the workspace
# install the packages
library(data.table)
library(dplyr)
library(ggplot2)
library(RColorBrewer)
library(readxl)
library(openxlsx)
# --------------------
# --------------------------------------------
# import the data
# set the main directory
dir = 'C:/Users/ccarelli/OneDrive - E Glaser Ped AIDS Fdtn/data/ccd/'
# get the sheets from the data
excel_sheets(paste0(dir, 'Reviewed DDD Reporting Template 29 Sept (20).xlsx'))
dt = data.table(read.xlsx(paste0(dir, 'Reviewed DDD Reporting Template 29 Sept (20).xlsx'),
sheet = 5))
# --------------------------------------------
# --------------------------------------------
# EXAMINE THE TABS FOR DATA ERRORS
# --------------------
# examine the TB Screening tab
# this sheet has multiple extraneous columns
length(dt)
names(dt)
# check that these columns do not contain data
i = 1
for (i in i:length(dt)) {
all_missing = all(is.na(dt[ ,..i]))
if (all_missing==FALSE) print(paste0(i, " contains data!"))
i = i+1 }
# only 17 of the 16,285 columns actually contain data
# subset to the first 17 columns
dt = dt[ , 1:17]
Viewdt()
View(dt)
# --------------------------------------------
# Caitlin O'Brien-Carelli
#
# Run descriptive statistics and data quality checks on CCD data
# --------------------------------------------
# --------------------
# Set up R
rm(list=ls()) # clear the workspace
# install the packages
library(data.table)
library(dplyr)
library(ggplot2)
library(RColorBrewer)
library(readxl)
library(openxlsx)
# --------------------
# --------------------------------------------
# import the data
# set the main directory
dir = 'C:/Users/ccarelli/OneDrive - E Glaser Ped AIDS Fdtn/data/ccd/'
# get the sheets from the data
excel_sheets(paste0(dir, 'Reviewed DDD Reporting Template 29 Sept (20).xlsx'))
dt = data.table(read.xlsx(paste0(dir, 'Reviewed DDD Reporting Template 29 Sept (20).xlsx'),
sheet = 5))
# --------------------------------------------
# --------------------------------------------
# EXAMINE THE TABS FOR DATA ERRORS
# --------------------
# examine the TB Screening tab
# this sheet has multiple extraneous columns
length(dt)
names(dt)
# check that these columns do not contain data
i = 1
for (i in i:length(dt)) {
all_missing = all(is.na(dt[ ,..i]))
if (all_missing==FALSE) print(paste0(i, " contains data!"))
i = i+1 }
# only 17 of the 16,285 columns actually contain data
# subset to the first 17 columns
dt = dt[ , 1:17]
# --------------------
# rename the columns for usability
# save the original names for the output file
original_names = names(dt)
setnames(dt, original_names, c('region', 'facility', 'location',
'week', 'sex', 'age', 'ppl_seen', 'on_tb_tx', 'eligible_for_screening',
'screened', 'presumptive_tb', 'presum_tb_referred', 'samples_collected',
'samples_sent_to_lab', 'results_received', 'bact_confirmed',
'bact_confirmed_started_tx'
))
# --------------------
# change column types for ease of manipulation
# region is sometimes misspelled
dt[region=='hhohho', region:='Hhohho']
# facility and location OK
# one location listed as "No DDD Conducted" - drop? (values all 0)
dt[!is.na(week)]
dt[is.na(week)]
